apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: vector-aggregator-monitor
  namespace: monitoring

spec:
  jobLabel: app.kubernetes.io/name
  selector:
    matchLabels:
      app.kubernetes.io/name: vector-aggregator
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: Aggregator
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
  podMetricsEndpoints:
    - port: prom-exporter
      path: /metrics

---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: vector-agent-monitor
  namespace: monitoring

spec:
  jobLabel: app.kubernetes.io/name
  selector:
    matchLabels:
      app.kubernetes.io/name: vector-agent
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: Agent
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
  podMetricsEndpoints:
    - port: prom-exporter
      path: /metrics

---
# By default, kube-prometheus RBAC rules allow monitoring in the `monitoring`,
# `default`, and `kube-system` namespace.  To support `PodMonitor`s in the
# `vector-system` namespace, we need an additional role and binding in that
# namespace.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-k8s
  namespace: {{ .Release.Namespace }}
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: monitoring
roleRef:
  name: prometheus-k8s
  apiGroup: rbac.authorization.k8s.io
  kind: Role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus-k8s
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
