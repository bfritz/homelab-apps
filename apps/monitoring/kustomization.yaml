apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
metadata:
  name: monitoring

resources:
  - github.com/bfritz/homelab-apps/vendor/kube-prometheus
  - ./alertmanager-email-brad.yaml
  - ./alertmanager-ingress.yaml
  - ./gotify-admin-password.yaml
  - ./gotify-deployment.yaml
  - ./gotify-ingress.yaml
  - ./gotify-service.yaml
  - ./gotify-serviceaccount.yaml
  - ./gotify-storage.yaml
  - ./grafana-dashboards-app.yaml
  - ./grafana-ingress.yaml
  - ./grafana-monitoring-dashboards-view-role.yaml
  - ./grafana-notifiers-brad.yaml
  - ./grafana-pg12-client-certificate.yaml
  - ./grafana-rolebinding.yaml
  - ./probes-internal-ips.yaml
  - ./probes-key-public-ips.yaml
  - ./prometheus-haproxy-ingress-servicemonitor.yaml
  - ./prometheus-ingress.yaml
  - ./prometheus-storage.yaml
  - ./prometheus_extra/additional-scrape-configs.yaml

images:
  - name: gotify/server
    digest: sha256:57aa2aabac035c16118f625dd6d3d2c3ca421b43b28cb27512f3212193d65771 # 2.1.0
  - name: kiwigrid/k8s-sidecar
    digest: sha256:2029752d7596ec30b65f1ce07bad9af1cdbb6cf7013fcc1f5720f4bf7c4b61e1 # 1.15.4

patches:
  - patch: |-
      apiVersion: monitoring.coreos.com/v1
      kind: Prometheus
      metadata:
        name: k8s
        namespace: monitoring
      spec:
        additionalScrapeConfigs:
          name: additional-scrape-configs
          key: prometheus-additional.yaml
        externalUrl: https://prometheus.k8s

  - patch: |-
      apiVersion: monitoring.coreos.com/v1
      kind: Alertmanager
      metadata:
        name: main
        namespace: monitoring
      spec:
        alertmanagerConfigSelector:
          matchLabels:
            alertmanagerConfig: active
        externalUrl: https://alertmanager.k8s

  - patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: grafana
        namespace: monitoring
      spec:
        template:
          spec:
            automountServiceAccountToken: true
            initContainers:
            - name: grafana-init-chmod-certs
              image: busybox:1.35-musl
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
                - -xc
                - |
                  cp /tmp/certs/* /etc/grafana/certs/
                  chmod 400 /etc/grafana/certs/*.key
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
              volumeMounts:
              - mountPath: /tmp/certs
                name: grafana-pg12-client-cert-raw
              - mountPath: /etc/grafana/certs
                name: grafana-pg12-client-cert
            containers:
            - name: grafana
              env:
              - name: GF_ANALYTICS_REPORTING_ENABLED
                value: "false"
              - name: GF_CHECK_FOR_UPDATES
                value: "false"
              - name: GF_UNIFIED_ALERTING_ENABLED
                value: "true"
              - name: GF_PLUGINS_ENABLE_ALPHA
                value: "true" # for AlertManager data source https://grafana.com/docs/grafana/latest/datasources/alertmanager/ @ v8.2
              - name: GF_ALERTING_ENABLED # legacy alerts
                value: "false"
              - name: GF_SMTP_ENABLED
                value: "true"
              - name: GF_SMTP_HOST
                value: mail.fewerhassles.com:587
              # bump CPU allotment for grafana container to avoid throttling (and Alertmanager alerts)
              resources:
                limits:
                  cpu: 300m
              volumeMounts:
              - name: grafana-notifiers
                mountPath: /etc/grafana/provisioning/notifiers
                readOnly: false
              - name: sc-dashboard-volume
                mountPath: "/grafana-dashboard-definitions/cm"
              - name: grafana-pg12-client-cert
                mountPath: /etc/grafana/certs/pg12
                readOnly: true
            - name: grafana-sc-dashboard
              image: "kiwigrid/k8s-sidecar"
              imagePullPolicy: IfNotPresent
              env:
                - name: METHOD
                  value: "WATCH"
                - name: LABEL
                  value: "grafana_dashboard"
                - name: FOLDER
                  value: "/tmp/dashboards"
                - name: RESOURCE
                  value: "configmap"
                - name: NAMESPACE
                  value: "monitoring-dashboards"
                - name: UNIQUE_FILENAMES
                  value: "true"
              volumeMounts:
              - name: sc-dashboard-volume
                mountPath: "/tmp/dashboards"
            volumes:
            - name: grafana-notifiers
              configMap:
                name: grafana-notifiers-brad
            - name: sc-dashboard-volume
              emptyDir: {}
            - name: grafana-pg12-client-cert-raw
              secret:
                secretName: grafana-pg12-client-cert
                defaultMode: 0400 # leading `0` is significant; yields octal value in yaml
            - name: grafana-pg12-client-cert
              emptyDir: {}

  - path: grafana-datasources.yaml
    target:
      name: grafana-datasources
      kind: Secret

  - patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: kube-state-metrics
        namespace: monitoring
      spec:
        template:
          spec:
            containers:
            - name: kube-rbac-proxy-main
              # bump CPU allotment for RBAC proxy on kube-state-metrics to avoid throttling (and Alertmanager alerts)
              resources:
                limits:
                  cpu: 80m

  # enable ICMP for blackbox-exporter and increase CPU limits
  - path: blackbox-exporter-configuration.yaml
    target:
      name: blackbox-exporter-configuration
      kind: ConfigMap

  - patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: blackbox-exporter
        namespace: monitoring
      spec:
        template:
          spec:
            containers:
            - name: blackbox-exporter
              resources:
                limits:
                  cpu: 100m
              securityContext:
                runAsUser: 0 # to override the default of 65534 (nobody)
                runAsNonRoot: false
                capabilities:
                  drop: ["ALL"]
                  add: ["NET_RAW"]

  # add supplemental grafana dashboard provider for ConfigMap backed dashboards
  - path: grafana-dashboards-configuration.yaml
    target:
      name: grafana-dashboards
      kind: ConfigMap

  # configure persistent storage for prometheus
  - patch: |-
      apiVersion: monitoring.coreos.com/v1
      kind: Prometheus
      metadata:
        name: k8s
        namespace: monitoring
      spec:
        retention: "30d"
        storage:
          volumeClaimTemplate:
            apiVersion: v1
            kind: PersistentVolumeClaim
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: "50Gi"
              selector:
                matchLabels:
                  app: prometheus
