apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: timescaledb
  namespace: timescaledb
spec:
  serviceName: timescaledb
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: timescaledb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: timescaledb
    spec:
      serviceAccountName: timescaledb
      securityContext:
        # 1000 to match postgres user inside the timescaledb image
        runAsNonRoot: true
        runAsUser: 70
        runAsGroup: 70
          # fsGroup: 1000
      containers:
      - name: timescaledb
        image: timescale/timescaledb
        ports:
        - containerPort: 5432
          name: postgresql
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-admin
              key: password
        - name: TIMESCALEDB_TELEMETRY
          value: "off"
        readinessProbe:
          exec:
            command:
              - pg_isready
              - -h
              - /var/run/postgresql
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 250m
            memory: 512Mi
        volumeMounts:
        - name: storage-volume
          mountPath: /var/lib/postgresql/data
        - name: socket-directory
          mountPath: /var/run/postgresql
      - name: postgres-exporter
        image: wrouesnel/postgres_exporter
        env:
        - name: DATA_SOURCE_NAME
          value: "host=/var/run/postgresql user=postgres application_name=postgres_exporter"
        - name: PG_EXPORTER_CONSTANT_LABELS
          value: namespace=timeseriesdb
        ports:
        - containerPort: 9187
          name: pg-exporter
        volumeMounts:
        - name: socket-directory
          mountPath: /var/run/postgresql
          readOnly: true

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: timescaledb
          - weight: 50
            podAffinityTerm:
              topologyKey: failure-domain.beta.kubernetes.io/zone
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: timescaledb

      volumes:
      - name: storage-volume
        persistentVolumeClaim:
          claimName: timescaledb-data
      - name: socket-directory
        emptyDir: {}
